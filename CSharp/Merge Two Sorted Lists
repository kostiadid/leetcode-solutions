/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int val=0, ListNode next=null) {
 *         this.val = val;
 *         this.next = next;
 *     }
 * }
 */

//https://leetcode.com/problems/merge-two-sorted-lists/?envType=problem-list-v2&envId=niqxdky2



public class Solution {
    public ListNode MergeTwoLists(ListNode list1, ListNode list2) {
        if(list1 == null){return list2;}
        if(list2 == null){return list1;}
        ListNode merge = new ListNode(0);

        if(list1.val<list2.val){merge = list1; list1 = list1.next;}
        else{merge=list2; list2 = list2.next;}
        
        ListNode current = merge;
        while(list1 !=null && list2 != null)
        {
            if(list1.val<list2.val){current.next = list1; list1 = list1.next;}
            else{current.next=list2; list2 = list2.next;}
            current = current.next;
        }

        if(list1!= null){current.next = list1;};
        if(list2!=null){current.next = list2;};

        return merge;
    }
}
